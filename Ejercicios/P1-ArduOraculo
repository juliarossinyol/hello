// EJERCICIO: ORÁCULO. Por Citlali Hernández - 2023
/* Vamos a utilizar la comunicación Serial para crear un oráculo.
    Utilizaremos y manipularemos distintos tipos de datos: int, float, String
    Aplicaremos random y condicionales para definir las respuestas obtenidas.
    Customiza el oráculo añadiendo con tantos Strings y posibilidades de respuestas quieras.
    Añade secuencias de luces a modo de indicadores interactivos.
    Añade a la respuesta del oráculo dos números de la suerte: uno entero y uno con decimales
    Documenta el ejercicio en Github. Comparte nuevas ideas y reflexiones que surjan con el ejercicio. */

String s1 = "El pasado es un libro abierto, el futuro un misterio por descubrir";
String s2 = "Las respuestas están dentro de ti, solo necesitas buscarlas.";
String s3 = "La sabiduría se encuentra en la quietud del alma.";
String s4 = "Escucha tu interior. Tu silencio te dará la respuesta";
String s5 = "Mira a tu alrededor, muchas veces la respuesta está más cerca de lo que crees.";
String numero = "Tus números de la suerte son: ";
String color = "El color que te representa: ";
String c1 = "Rojo!";
String c2 = "Azul!";
String c3 = "Amarillo!";
String miPregunta;
int valRandom;

int ledW = 2;             //led de bienvenida

int ledB1 = 3; 
int ledB2 = 5; 
int ledY1 = 6; 
int ledY2 = 9;
int ledR1 = 10;
int ledR2 = 11;

int vled[6] = {ledB1,ledY1,ledR2,ledR1,ledY2,ledB2};

int fadeCount = 5;  // El valor del incremento del brillo por cada bucle (podéis experimentar incrementando este valor)
int brillo = 0;    // Valor inicial del brillo para un led.

int numSuerte;
float numSuerteF;


void setup() {
  Serial.begin(9600);

  pinMode(ledW,OUTPUT);

  pinMode(ledB1,OUTPUT);
  pinMode(ledB2,OUTPUT);
  pinMode(ledR1,OUTPUT);
  pinMode(ledR2,OUTPUT);
  pinMode(ledY1,OUTPUT);
  pinMode(ledY2,OUTPUT);

  digitalWrite(ledW, HIGH);
  
  if (Serial) {                                                                     // Comprobamos que el Monitor Serial está abierto
    Serial.println("¡Bienvenido! ¿Quieres saber tu futuro? Hazme una pregunta.");  // Imprimimos el texto
  }

}

void loop() {

  if (Serial.available() > 0) {                 // la función serial.available lee información del puerto serial
    miPregunta = Serial.readStringUntil('\n');  // "\n" - nueva línea, "\r" - Retorno al inicio,
    Serial.print("Tu pregunta es: ");
    Serial.println(miPregunta);
    delay(2000);

    /// RESPUESTA ALEATORIA A LA PREGUNTA - SECUENCIAS DE LUCES DE COLOR ///

    // Tiramos un "dado" para conseguir un número aleatorio entre 0 y 2.
    valRandom = random(1, 1);

    if (valRandom == 0) {
      Serial.println(s1);
      delay(1000);
      
      for (int n=0; n<=3; n=n+1){
        digitalWrite(ledB1, HIGH);
        digitalWrite(ledB2, HIGH);
        delay(100);
        digitalWrite(ledY1, HIGH);
        digitalWrite(ledY2, HIGH);
        delay(100);
        digitalWrite(ledR1, HIGH);
        digitalWrite(ledR2, HIGH);
        delay(100);
        digitalWrite(ledR1, LOW);
        digitalWrite(ledR2, LOW);
        delay(100);
        digitalWrite(ledY1, LOW);
        digitalWrite(ledY2, LOW);
        delay(100);
        digitalWrite(ledB1, LOW);
        digitalWrite(ledB2, LOW);
        delay(100);  
        }

    } else if (valRandom == 1) {
      Serial.println(s2);
      delay(2000);

        for (brillo = 0 ; brillo <= 255; brillo = brillo+fadeCount) {
      
        analogWrite(ledB1, brillo);
        analogWrite(ledB2, brillo);
        analogWrite(ledR1, brillo);
        analogWrite(ledR2, brillo);
        analogWrite(ledY1, brillo);
        analogWrite(ledY2, brillo);
 
        delay(30);
        }
       
        for (brillo = 255 ; brillo >= 0; brillo = brillo-fadeCount) {

        analogWrite(ledB1, brillo);
        analogWrite(ledB2, brillo);
        analogWrite(ledR1, brillo);
        analogWrite(ledR2, brillo);
        analogWrite(ledY1, brillo);
        analogWrite(ledY2, brillo);  
        
        delay(30);
        }
        delay(1000);
      }  

      else if (valRandom == 2) {
      Serial.println(s3);
      delay(2000);

      for (int n=0; n<5; n=n+1){
        digitalWrite(ledB1, HIGH);
        digitalWrite(ledB2, HIGH);
        digitalWrite(ledR1, HIGH);
        digitalWrite(ledR2, HIGH);
        digitalWrite(ledY1, HIGH);
        digitalWrite(ledY2, HIGH);
        delay(200);
        digitalWrite(ledB1, LOW);
        digitalWrite(ledB2, LOW);
        digitalWrite(ledR1, LOW);
        digitalWrite(ledR2, LOW);
        digitalWrite(ledY1, LOW);
        digitalWrite(ledY2, LOW);
        delay(200);
        }
    
      } 

      else if (valRandom == 3) {
      Serial.println(s4);
      delay(2000);

      for (int n=0; n<=3; n=n+1){
        digitalWrite(ledB1, HIGH);
        digitalWrite(ledB2, LOW);
        digitalWrite(ledR1, LOW);
        digitalWrite(ledR2, HIGH);
        digitalWrite(ledY1, LOW);
        digitalWrite(ledY2, HIGH);
        delay(200);
        digitalWrite(ledB1, LOW);
        digitalWrite(ledB2, HIGH);
        digitalWrite(ledR1, HIGH);
        digitalWrite(ledR2, LOW);
        digitalWrite(ledY1, HIGH);
        digitalWrite(ledY2, LOW);
        delay(200);
        }

      digitalWrite(ledB1, LOW);
      digitalWrite(ledB2, LOW);
      digitalWrite(ledR1, LOW);
      digitalWrite(ledR2, LOW);
      digitalWrite(ledY1, LOW);
      digitalWrite(ledY2, LOW);
      delay(200);
    } 

      else if (valRandom == 4) {
      Serial.println(s5);
      delay(2000);
      digitalWrite(ledB1, LOW);
      digitalWrite(ledB2, LOW);
      digitalWrite(ledR1, HIGH);
      digitalWrite(ledR2, HIGH);
      digitalWrite(ledY1, LOW);
      digitalWrite(ledY2, LOW);
      delay(600);
      digitalWrite(ledB1, HIGH);
      digitalWrite(ledB2, HIGH);
      digitalWrite(ledR1, LOW);
      digitalWrite(ledR2, LOW);
      digitalWrite(ledY1, LOW);
      digitalWrite(ledY2, LOW);
      delay(600);
      digitalWrite(ledB1, LOW);
      digitalWrite(ledB2, LOW);
      digitalWrite(ledR1, LOW);
      digitalWrite(ledR2, LOW);
      digitalWrite(ledY1, HIGH);
      digitalWrite(ledY2, HIGH);
      delay(600);
      digitalWrite(ledB1, LOW);
      digitalWrite(ledB2, LOW);
      digitalWrite(ledR1, LOW);
      digitalWrite(ledR2, LOW);
      digitalWrite(ledY1, LOW);
      digitalWrite(ledY2, LOW);
      delay(200);
    }

    delay(2000);

    /// NÚMERO DE LA SUERTE ///
 
    // Tiramos un "dado" para conseguir un número aleatorio de la suerte en un rango entre 1 y 6.
    numSuerte = random(1, 6);
    // Tiramos un "dado" para conseguir un número aleatorio decimal de la suerte en un rango entre 1 y 5.
    numSuerteF = random(2, 12) * 0.5;
    Serial.println(numero);
    Serial.println(numSuerte); // Imprimimos un número de la suerte entero
      
      delay(1000);
      
      for (int n=0;n<numSuerte;n=n+1){
        digitalWrite(vled[n],HIGH);
        delay(500);
      }
      delay(1000);
      for (int n=0;n<numSuerte;n=n+1){
        digitalWrite(vled[n],LOW);
      }
      
    delay(2000);
    Serial.println(numSuerteF); // Imprimimos un número de la suerte con decimales
   
    delay(2000);

    /// COLOR DE LA SUERTE ///
    
    Serial.println(color);

    valRandom = random(0, 2);
    
    if (valRandom == 0) {
      Serial.println(c1);
      digitalWrite(ledR1, HIGH);
      digitalWrite(ledR2, HIGH);
      delay(5000);
      digitalWrite(ledR1, LOW);
      digitalWrite(ledR2, LOW);
    } else if (valRandom == 1) {
      Serial.println(c2);
      digitalWrite(ledB1, HIGH);
      digitalWrite(ledB2, HIGH);
      delay(5000);
      digitalWrite(ledB1, LOW);
      digitalWrite(ledB2, LOW);
    } else if (valRandom == 2) {
      Serial.println(c3);
      digitalWrite(ledY1, HIGH);
      digitalWrite(ledY2, HIGH);
      delay(5000);
      digitalWrite(ledY1, LOW);
      digitalWrite(ledY2, LOW);
    }

    delay(2000);

    /// SIGUIENTE PREGUNTA ///

    Serial.println(" --------> ¿Cuál es tu siguiente pregunta?");
  }
}
